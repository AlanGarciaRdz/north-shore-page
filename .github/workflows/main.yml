# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  git-checkout:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@main

      # Clone for the first time the Project
      - name: Clone Project
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            if [ ! -f ${{ secrets.PROJECT_FOLDER }} ]
            then
                mkdir ${{ secrets.PROJECT_FOLDER }}
            fi
            cd ${{ secrets.PROJECT_FOLDER }}
            if [ ! -f package.json ]
            then
                git clone https://${{ secrets.TOKEN_GITHUB }}@github.com/${{ github.repository }}.git .
            fi

       # Checkout and Pull the Project for changes
      - name: Checkout Project
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ${{ secrets.PROJECT_FOLDER }}
            git checkout -f
            git pull

  env-creation:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Create .env file if does not exist
      - name: Create .env file
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ${{ secrets.PROJECT_FOLDER }}
            if [ ! -f .env ]
            then
                printf ' ${{ secrets.ENV }}' > env.txt
                cp env.txt .env
                sudo rm -R env.txt
            fi

  build-project:
    needs: [git-checkout]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
       # Builds and install the project using yarn
      - name: Build Project
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ${{ secrets.PROJECT_FOLDER }}
            yarn install
            yarn run build    

  run-project:
    needs: [git-checkout, build-project]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
       # Run the project on pm2
      - name: Run Project
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ${{ secrets.PROJECT_FOLDER }}
            yarn run server